/**
 *  stegru's morphic-bar client spec format from:
 *  https://gist.github.com/stegru/9e0b866a9933cdbad4d0e6f6ea26c706
 *
 *  Here for reference.
 */
{
  id: "bar1",
  name: "Example bar",
  // Colours (and perhaps other visual things)
  theme: {
    text: "back",
    background: "white"
  },
  itemTheme: {
    text: "white",
    background: "#002957"
  },

  // The items for the bar
  items: [
    {
      // email|calendar|videocall|photos|...
      // Probably be ignored by the client
      category: "calendar",

      // unique identifier (probably ignored by client)
      id: "calendar-button",

      // Displayed on the button
      label: "Calendar",

      // Tooltip
      popupText: "Open the calendar",

      // More details. If this is specified, then `popupText` will become a header in the tooltip.
      description: "Displays your google calendar",

      // per-button theme, overrides the `theme.itemTheme` field from above.
      theme: {},

      // The kind of item
      kind: "button",

      // The item data specific to the kind of item
      value: {
        icon: "calendar.png",
        action: {
          type: "web",
          data: "https://calendar.example.com"
        }
      }
    },
    {
      // A toggle switch - same as a button, except `actionType` and `actionData` are moved inside `on` and `off`.
      // `on` and `off` behave like buttons.
      id: "read-write",
      name: "Read Write",
      kind: "toggle",
      value: {
        // Set the preference
        preference: "gpii.readwrite.enabled",

        // If `preference` is undefined, then `state`, `on`, and `off` are used, which behave like buttons.

        // Detect the current state - will be a built-in function that returns a boolean, or command (exit 0 = 'on')
        state: {
          // Perhaps if `on.actionType` is `app`, this isn't required.
          action: {
            type: "shell",
            data: "Get-Process read-write.exe",
          }
        },
        on: {
          text: "On",
          // default: "On",
          // same as a button's `actionType`/`actionData`
          action: {
            type: "app",
            data: "read-write.exe"
          }
        },
        off: {
          // Same structure as `on`.
        }
      }
    }
  ]
}
